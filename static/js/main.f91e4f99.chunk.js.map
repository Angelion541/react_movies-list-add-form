{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","hasTitleError","setTitleError","hasImgUrlError","setImgUrlError","hasImdbUrlError","setImdbUrlError","hasImdbIdError","setImdbIdError","method","onSubmit","event","preventDefault","stopPropagation","hundleSubmit","id","type","classNames","value","onChange","target","App","moviesFromServer","setMovies","newMovie","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f91e4f99.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  onAdd: (movie: Movie) => void,\n}\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasImgUrlError, setImgUrlError] = useState(false);\n  const [hasImdbUrlError, setImdbUrlError] = useState(false);\n  const [hasImdbIdError, setImdbIdError] = useState(false);\n\n  const hundleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    setTitleError(!title);\n    setImgUrlError(!imgUrl);\n    setImdbUrlError(!imdbUrl);\n    setImdbIdError(!imdbId);\n\n    if (!title || !imgUrl || !imdbUrl || !imdbId) {\n      return;\n    }\n\n    const newMovie: Movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    onAdd(newMovie);\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  return (\n    <form\n      method=\"post\"\n      className=\"form needs-validation\"\n      onSubmit={(event) => hundleSubmit(event)}\n    >\n      <div className=\"input-group mb-3\">\n        <span className=\"input-group-text\" id=\"basic-title\">Title</span>\n        <input\n          type=\"text\"\n          className={classNames('form-control', {\n            'is-invalid': hasTitleError,\n            'is-valid': title,\n          })}\n          data-cy=\"form-title\"\n          aria-describedby=\"basic-title\"\n          value={title}\n          onChange={(event) => {\n            setTitle(event.target.value);\n            setTitleError(false);\n          }}\n        />\n      </div>\n\n      <div className=\"input-group mb-3\">\n        <span className=\"input-group-text\">Description</span>\n        <textarea\n          className=\"form-control\"\n          aria-label=\"With textarea\"\n          data-cy=\"form-title\"\n          value={description}\n          onChange={(event) => setDescription(event.target.value)}\n        />\n      </div>\n\n      <div className=\"input-group mb-3\">\n        <span className=\"input-group-text\" id=\"basic-addon1\">imgUrl</span>\n        <input\n          type=\"text\"\n          className={classNames('form-control', {\n            'is-invalid': hasImgUrlError,\n            'is-valid': imgUrl,\n          })}\n          aria-label=\"Username\"\n          aria-describedby=\"basic-addon1\"\n          data-cy=\"form-title\"\n          value={imgUrl}\n          onChange={(event) => {\n            setImgUrl(event.target.value);\n            setImgUrlError(false);\n          }}\n        />\n      </div>\n\n      <div className=\"input-group mb-3\">\n        <span className=\"input-group-text\" id=\"basic-addon1\">imdbUrl</span>\n        <input\n          type=\"text\"\n          className={classNames('form-control', {\n            'is-invalid': hasImdbUrlError,\n            'is-valid': imdbUrl,\n          })}\n          aria-label=\"Username\"\n          aria-describedby=\"basic-addon1\"\n          data-cy=\"form-title\"\n          value={imdbUrl}\n          onChange={(event) => {\n            setImdbUrl(event.target.value);\n            setImdbUrlError(false);\n          }}\n        />\n      </div>\n\n      <div className=\"input-group mb-3\">\n        <span className=\"input-group-text\" id=\"basic-addon1\">imdbId</span>\n        <input\n          type=\"text\"\n          className={classNames('form-control', {\n            'is-invalid': hasImdbIdError,\n            'is-valid': imdbId,\n          })}\n          aria-label=\"Username\"\n          aria-describedby=\"basic-addon1\"\n          data-cy=\"form-title\"\n          value={imdbId}\n          onChange={(event) => {\n            setImdbId(event.target.value);\n            setImdbIdError(false);\n          }}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"btn btn-primary\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies((state) => ([...state, newMovie]));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}